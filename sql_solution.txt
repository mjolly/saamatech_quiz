CREATE SCHEMA test;

CREATE TABLE test.Visits (
	_id serial PRIMARY KEY,
	Customer_id VARCHAR ( 100 ) ,
	City_id_visited VARCHAR ( 100 ),
	Date_visited VARCHAR ( 100 ) 
);

INSERT INTO test.Visits (Customer_id,City_id_visited,Date_visited) 
VALUES 
('1001','2003','1-Jan-03'),
('1001','2004','1-Jan-04'),
('1002','2001','1-Jan-01'),
('1004','2003','1-Jan-03')


select * from test.Visits;

CREATE TABLE test.Customer (
	_id serial PRIMARY KEY,
	Customer_id VARCHAR ( 100 ) ,
	Customer_name VARCHAR ( 100 ),
	Gender VARCHAR ( 100 ),
    Age VARCHAR ( 100 )
);

INSERT INTO test.Customer (Customer_id,Customer_name,Gender, Age) 
VALUES 
('1001','John','M','25'),
('1002', 'Mark', 'M', '40'),
('1003', 'Martha', 'F', '55'),
('1004', 'Selena', 'F', '34')

select * from test.Customer;


CREATE TABLE test.City (
	_id serial PRIMARY KEY,
	City_id VARCHAR ( 100 ) ,
	City_name VARCHAR ( 100 ),
	Expense VARCHAR ( 100 ) 
);

INSERT INTO test.City (City_id,City_name,Expense) 
VALUES 
('2001', 'Chicago', '500'),
('2002', 'Newyork', '1000'),
('2003', 'SFO', '2000'),
('2004', 'Florida', '800')

select * from test.City;

query solution 1:

SELECT t2.city_name, COUNT(t1.City_id_visited) AS Frequency
FROM test.Visits as t1
INNER JOIN test.City as t2 ON t1.City_id_visited = t2.City_id
group by t2.city_name
ORDER BY
COUNT(t2.city_name) DESC

query solution 2:

SELECT t1.customer_name, t2.customer_id
FROM test.Customer as t1
INNER JOIN test.Visits as t2 ON t1.Customer_id = t2.Customer_id
group by t2.customer_id, t1.customer_name
having count(*) > 1

query solution 3:

SELECT t2.city_name, string_agg(t3.gender, ', ')
FROM test.Visits as t1
INNER JOIN test.City as t2 ON t1.City_id_visited = t2.City_id
INNER JOIN test.Customer as t3 ON t3.customer_id = t1.customer_id
group by t2.city_name

query solution 4:
Question needs some added explanation.

query solution 5:

SELECT t3.customer_name, count(t1.customer_id)::INT/(select count(city_id_visited)::FLOAT from test.visits)::FLOAT as travel_percentage
FROM test.Visits as t1
INNER JOIN test.City as t2 ON t1.City_id_visited = t2.City_id
INNER JOIN test.Customer as t3 ON t3.customer_id = t1.customer_id
GROUP BY t3.customer_name;

query solution 6:

SELECT t3.customer_name, t1.date_visited, sum(t2.expense::INT)
FROM test.Visits as t1
INNER JOIN test.City as t2 ON t1.City_id_visited = t2.City_id
INNER JOIN test.Customer as t3 ON t3.customer_id = t1.customer_id
group by t1.customer_id, t3.customer_name, t1.date_visited

query solution 7:

SELECT t3.customer_name, t2.city_name, t1.date_visited
FROM test.Visits as t1
INNER JOIN test.City as t2 ON t1.City_id_visited = t2.City_id
INNER JOIN test.Customer as t3 ON t3.customer_id = t1.customer_id
order by t3.customer_name, t1.date_visited::date asc
